{"ast":null,"code":"var _jsxFileName = \"/home/dimo/Desktop/Typescript/github-ts-blog/src/components/BlogPage.tsx\";\nimport React from \"react\";\nimport BlogItem from \"./BlogItem\";\nimport { EntryItem } from \"./EntryItem\";\n// import { useQuery } from \"@apollo/react-hooks\";\n// import { FIND_BLOG } from \"../apollo/protocol\";\nimport { db_mock } from \"../apollo/db_mock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class BlogPage extends React.Component {\n  // constructor(props:IBlogPageProps){\n  //   super(props);\n  // }\n  // const {\n  //   data = { blog: {} },\n  //   loading,\n  //   error,\n  // } = useQuery(FIND_BLOG, {\n  //   variables: {\n  //     blogId: this.props.match.params.id,\n  //   },\n  // });\n  // if (loading) {\n  //   return <p>loading...</p>;\n  // }\n  // if (error) {\n  //   data.blog = db_mock[props.match.params.id - 1];\n  // }\n  render() {\n    var _data$0$entries;\n\n    let data = db_mock.filter(item => item.id === parseInt(this.props.match.params.id));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-container\",\n        children: [/*#__PURE__*/_jsxDEV(BlogItem, {\n          blog: { ...data[0]\n          }\n        }, data[0].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), (_data$0$entries = data[0].entries) === null || _data$0$entries === void 0 ? void 0 : _data$0$entries.map(item => {\n          return /*#__PURE__*/_jsxDEV(EntryItem, {\n            entry: item\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n;\nexport default BlogPage;","map":{"version":3,"sources":["/home/dimo/Desktop/Typescript/github-ts-blog/src/components/BlogPage.tsx"],"names":["React","BlogItem","EntryItem","db_mock","BlogPage","Component","render","data","filter","item","id","parseInt","props","match","params","entries","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA;AACA;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAKA,OAAO,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAA0D;AAE/D;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAE;AAAA;;AAGN,QAAIC,IAAW,GAAGJ,OAAO,CAACK,MAAR,CAAeC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYC,QAAQ,CAAC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBJ,EAAzB,CAA3C,CAAlB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE,QAAC,QAAD;AAA2B,UAAA,IAAI,EAAE,EAAE,GAAGH,IAAI,CAAC,CAAD;AAAT;AAAjC,WAAeA,IAAI,CAAC,CAAD,CAAJ,CAAQG,EAAvB;AAAA;AAAA;AAAA;AAAA,gBADF,qBAEGH,IAAI,CAAC,CAAD,CAAJ,CAAQQ,OAFX,oDAEG,gBAAiBC,GAAjB,CAAsBP,IAAD,IAAU;AAC9B,8BAAO,QAAC,SAAD;AAAyB,YAAA,KAAK,EAAEA;AAAhC,aAAgBA,IAAI,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAvC8D;AAwChE;AAED,eAAeN,QAAf","sourcesContent":["import React from \"react\";\r\nimport BlogItem from \"./BlogItem\";\r\nimport { EntryItem } from \"./EntryItem\";\r\nimport { Blog } from '../types/TypeDefs';\r\n// import { useQuery } from \"@apollo/react-hooks\";\r\n// import { FIND_BLOG } from \"../apollo/protocol\";\r\nimport { db_mock } from \"../apollo/db_mock\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\ntype IBlogPageProps = RouteComponentProps<{ id: string }>\r\n\r\nexport class BlogPage extends React.Component<IBlogPageProps,{}> {\r\n\r\n  // constructor(props:IBlogPageProps){\r\n  //   super(props);\r\n  // }\r\n\r\n  // const {\r\n  //   data = { blog: {} },\r\n  //   loading,\r\n  //   error,\r\n  // } = useQuery(FIND_BLOG, {\r\n  //   variables: {\r\n  //     blogId: this.props.match.params.id,\r\n  //   },\r\n  // });\r\n\r\n  // if (loading) {\r\n  //   return <p>loading...</p>;\r\n  // }\r\n\r\n  // if (error) {\r\n  //   data.blog = db_mock[props.match.params.id - 1];\r\n  // }\r\n\r\n  render(){\r\n\r\n\r\n    let data:Blog[] = db_mock.filter(item => item.id === parseInt(this.props.match.params.id))\r\n\r\n    return (\r\n      <div className=\"page-container\">\r\n        <div className=\"blog-container\">\r\n          <BlogItem key={data[0].id} blog={{ ...data[0] }} />\r\n          {data[0].entries?.map((item) => {\r\n            return <EntryItem key={item.id} entry={item} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default BlogPage;\r\n"]},"metadata":{},"sourceType":"module"}