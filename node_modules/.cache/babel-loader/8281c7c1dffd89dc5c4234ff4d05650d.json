{"ast":null,"code":"var _jsxFileName = \"/home/dimo/Desktop/Typescript/github-ts-blog/src/components/MyBlogsPage.tsx\";\n// *** Under construction - transferring to Appsync client - currently using mock data*** //\nimport React from 'react';\nimport BlogItem from './BlogItem'; //import { Blog } from '../types/TypeDefs';\n//import { useQuery } from '@apollo/react-hooks';\n//import config from '../config/config';\n//import { useMutation } from '@apollo/react-hooks';\n//import { BLOGS_BY_USER, DELETE_BLOG } from '../apollo/protocol';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class MyBlogsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      blogCollection: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadBlogs();\n  } //*** delete blog function */\n  // const [deleteBlog, blog] = useMutation(DELETE_BLOG);\n  // private funcDeleteBlog(blog_id:number):void {\n  //   console.log('Deleting blog with id: ', blog_id)\n  // }\n\n\n  async loadBlogs() {\n    const blogCollection = await this.props.dataService.getBlogs();\n    this.setState({\n      blogCollection\n    });\n  } // }\n  // const funcDeleteBlog = (deleteBlogId) => {\n  //   deleteBlog({\n  //     variables: {\n  //       deleteBlogId,\n  //     },\n  //   })\n  //     .then((response) => {\n  //       console.log(response);\n  //       refetch();\n  //     })\n  //     .catch((error) => console.log(error));\n  // };\n  //*** blogs by user query */\n  // const { data, loading, error, refetch, networkStatus } = useQuery(\n  //   BLOGS_BY_USER,\n  //   {\n  //     variables: {\n  //       userId: decoded.id,\n  //     },\n  //     notifyOnNetworkStatusChange: true,\n  //   },\n  // );\n  //if (networkStatus === 4) return <p>reloading...</p>;\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-container\",\n        children: this.state.blogCollection.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(BlogItem, {\n            blog: { ...item\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"blog-button delete-button\" //onClick={() => this.funcDeleteBlog(item.id)}\n            ,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/dimo/Desktop/Typescript/github-ts-blog/src/components/MyBlogsPage.tsx"],"names":["React","BlogItem","MyBlogsPage","Component","constructor","props","state","blogCollection","componentDidMount","loadBlogs","dataService","getBlogs","setState","render","map","item","id"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;AACA;AACA;AACA;AACA;;;AAUA,OAAO,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAAgF;AAErFC,EAAAA,WAAW,CAACC,KAAD,EAAyB;AAClC,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE;AADL,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,SAAL;AACD,GAZoF,CAcrF;AAEA;AAEA;AACA;AACA;;;AAEuB,QAATA,SAAS,GAAgB;AACrC,UAAMF,cAAc,GAAG,MAAM,KAAKF,KAAL,CAAWK,WAAX,CAAuBC,QAAvB,EAA7B;AACA,SAAKC,QAAL,CAAc;AAACL,MAAAA;AAAD,KAAd;AAED,GA1BoF,CA6BrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEAM,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBACG,KAAKP,KAAL,CAAWC,cAAX,CAA0BO,GAA1B,CAA+BC,IAAD,iBAC7B;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,IAAI,EAAE,EAAE,GAAGA;AAAL;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,SAAS,EAAC,2BADZ,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAUA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA3EoF","sourcesContent":["// *** Under construction - transferring to Appsync client - currently using mock data*** //\n\nimport React from 'react';\nimport { DataService } from '../services/DataService';\nimport { Blog } from '../types/TypeDefs';\nimport BlogItem from './BlogItem';\n//import { Blog } from '../types/TypeDefs';\n//import { useQuery } from '@apollo/react-hooks';\n//import config from '../config/config';\n//import { useMutation } from '@apollo/react-hooks';\n//import { BLOGS_BY_USER, DELETE_BLOG } from '../apollo/protocol';\n\ninterface IMyBlogsPageProps {\n  dataService: DataService;\n}\n\ninterface IMyBlogsPageState {\n  blogCollection: Blog[]\n}\n\nexport class MyBlogsPage extends React.Component<IMyBlogsPageProps, IMyBlogsPageState> {\n  \n  constructor(props:IMyBlogsPageProps){\n    super(props);\n\n    this.state = {\n      blogCollection: []\n    }\n  }\n\n  componentDidMount(){\n    this.loadBlogs();\n  }\n\n  //*** delete blog function */\n\n  // const [deleteBlog, blog] = useMutation(DELETE_BLOG);\n\n  // private funcDeleteBlog(blog_id:number):void {\n  //   console.log('Deleting blog with id: ', blog_id)\n  // }\n\n  private async loadBlogs():Promise<void>{\n    const blogCollection = await this.props.dataService.getBlogs();\n    this.setState({blogCollection})\n  \n  }\n\n\n  // }\n  // const funcDeleteBlog = (deleteBlogId) => {\n  //   deleteBlog({\n  //     variables: {\n  //       deleteBlogId,\n  //     },\n  //   })\n  //     .then((response) => {\n  //       console.log(response);\n  //       refetch();\n  //     })\n  //     .catch((error) => console.log(error));\n  // };\n\n  //*** blogs by user query */\n\n  // const { data, loading, error, refetch, networkStatus } = useQuery(\n  //   BLOGS_BY_USER,\n  //   {\n  //     variables: {\n  //       userId: decoded.id,\n  //     },\n  //     notifyOnNetworkStatusChange: true,\n  //   },\n  // );\n\n  //if (networkStatus === 4) return <p>reloading...</p>;\n\n  render(){\n    return (\n      <div className=\"page-container\">\n        <div className=\"blog-container\">\n          {this.state.blogCollection.map((item) => (\n            <div key={item.id}>\n              <BlogItem blog={{ ...item }} />\n              <button\n                className=\"blog-button delete-button\"\n                //onClick={() => this.funcDeleteBlog(item.id)}\n              >\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n}\n\n"]},"metadata":{},"sourceType":"module"}