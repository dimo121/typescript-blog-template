{"ast":null,"code":"var _jsxFileName = \"/home/dimo/Desktop/Typescript/github-ts-blog/src/components/EntryFormPage.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EntryFormPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      content: '',\n      error: ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.title || !this.state.content) {\n      this.setState({\n        error: 'Both title and content are required'\n      });\n    } else {\n      this.props.onSubmission(this.state.title, this.state.content);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entry-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          name: \"title\",\n          placeholder: \"...\",\n          onChange: e => this.setState({\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"content\",\n          name: \"content\",\n          cols: 100,\n          rows: 20,\n          placeholder: \"Enter content here\",\n          onChange: e => this.setState({\n            content: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"button\",\n          type: \"submit\",\n          value: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), this.state.error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"entry-error\",\n        children: [\"Error : \", this.state.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/dimo/Desktop/Typescript/github-ts-blog/src/components/EntryFormPage.tsx"],"names":["React","EntryFormPage","Component","constructor","props","state","title","content","error","onSubmit","bind","e","preventDefault","setState","onSubmission","render","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAYA,eAAe,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA6E;AAE1FC,EAAAA,WAAW,CAACC,KAAD,EAAwB;AACjC,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAY;AACVC,MAAAA,KAAK,EAAC,EADI;AAEVC,MAAAA,OAAO,EAAC,EAFE;AAGVC,MAAAA,KAAK,EAAC;AAHI,KAAZ;AAMA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEOD,EAAAA,QAAQ,CAACE,CAAD,EAAsC;AACpDA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAAC,KAAKP,KAAL,CAAWC,KAAZ,IAAmB,CAAC,KAAKD,KAAL,CAAWE,OAAnC,EAA2C;AACzC,WAAKM,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAE;AAAR,OAAd;AACD,KAFD,MAEO;AACL,WAAKJ,KAAL,CAAWU,YAAX,CACE,KAAKT,KAAL,CAAWC,KADb,EAEE,KAAKD,KAAL,CAAWE,OAFb;AAID;AACF;;AAEDQ,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAE,KAAKN,QAArB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,WAAW,EAAC,KAJd;AAKE,UAAA,QAAQ,EAAGE,CAAD,IAA4C,KAAKE,QAAL,CAAc;AAACP,YAAAA,KAAK,EAAEK,CAAC,CAACK,MAAF,CAASC;AAAjB,WAAd;AALxD;AAAA;AAAA;AAAA;AAAA,gBAHF,eAUE;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE;AAAO,UAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE;AACE,UAAA,EAAE,EAAC,SADL;AAEE,UAAA,IAAI,EAAC,SAFP;AAGE,UAAA,IAAI,EAAE,GAHR;AAIE,UAAA,IAAI,EAAE,EAJR;AAKE,UAAA,WAAW,EAAC,oBALd;AAME,UAAA,QAAQ,EAAGN,CAAD,IAAoD,KAAKE,QAAL,CAAc;AAACN,YAAAA,OAAO,EAAEI,CAAC,CAACK,MAAF,CAASC;AAAnB,WAAd;AANhE;AAAA;AAAA;AAAA;AAAA,gBAdF,eAsBE;AAAA;AAAA;AAAA;AAAA,gBAtBF,eAuBE;AAAA;AAAA;AAAA;AAAA,gBAvBF,eAwBE;AAAO,UAAA,SAAS,EAAC,QAAjB;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAwC,UAAA,KAAK,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EA2BG,KAAKZ,KAAL,CAAWG,KAAX,iBAAoB;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA,+BAAoC,KAAKH,KAAL,CAAWG,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AA1DyF","sourcesContent":["import React from 'react';\r\n\r\ninterface IEntryFormState {\r\n  title: string;\r\n  content: string;\r\n  error: string;\r\n}\r\n\r\ninterface IEntryFormProps {\r\n  onSubmission : (title:string,content:string) => void;\r\n}\r\n\r\nexport default class EntryFormPage extends React.Component<IEntryFormProps,IEntryFormState> {\r\n\r\n  constructor(props:IEntryFormProps) {\r\n    super(props);\r\n\r\n    this.state ={\r\n      title:'',\r\n      content:'',\r\n      error:''\r\n    }\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  private onSubmit(e:React.SyntheticEvent<EventTarget>) {\r\n    e.preventDefault();\r\n    if (!this.state.title||!this.state.content){\r\n      this.setState({error: 'Both title and content are required'});\r\n    } else {\r\n      this.props.onSubmission(\r\n        this.state.title,\r\n        this.state.content\r\n      );\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"entry-form-container\">\r\n        <form onSubmit={this.onSubmit}>\r\n          <label htmlFor=\"title\">Title:</label>\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            placeholder=\"...\"\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({title: e.target.value})}\r\n          ></input>\r\n          <br />\r\n          <br />\r\n          <label htmlFor=\"content\">Content:</label>\r\n          <br />\r\n          <textarea\r\n            id=\"content\"\r\n            name=\"content\"\r\n            cols={100}\r\n            rows={20}\r\n            placeholder=\"Enter content here\"\r\n            onChange={(e: React.ChangeEvent<HTMLTextAreaElement>):void => this.setState({content: e.target.value})}\r\n          ></textarea>\r\n          <br />\r\n          <br />\r\n          <input className=\"button\" type=\"submit\" value=\"Save\" />\r\n        </form>\r\n        {this.state.error && <p className=\"entry-error\">Error : {this.state.error}</p>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}