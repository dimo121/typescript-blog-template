{"ast":null,"code":"var _jsxFileName = \"/home/dimo/Desktop/Typescript/github-ts-blog/src/components/Dashboard.tsx\";\n// *** transferring to Appsync client *** //\nimport BlogItem from \"./BlogItem\";\nimport BlogListFilter from \"./BlogListFilter\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      search: 'Title',\n      page: 1,\n      dataCollection: [],\n      blogsLength: 0 //loading: true\n\n    };\n    this.loadBlogs = this.loadBlogs.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadBlogs();\n  }\n\n  async loadBlogs() {\n    let resultBlogs = await this.props.dataService.getBlogs();\n    this.setState({\n      dataCollection: resultBlogs\n    });\n  } //Also paginate server side\n\n\n  paginateLocal(blogs) {\n    const end = this.state.page * 5;\n    const start = end - 5;\n    const result = [];\n\n    for (let i = start; i < end; i++) {\n      if (blogs[i]) result.push(blogs[i]);\n    }\n\n    return result;\n  }\n\n  render() {\n    var _resultBlogs;\n\n    // if (this.state.loading) {\n    //   return (\n    //     //loader-spinner\n    //     <div class=\"lds-default\">\n    //       <div></div><div></div><div></div>\n    //       <div></div><div></div><div></div>\n    //       <div></div><div></div><div></div>\n    //       <div></div><div></div><div></div>\n    //     </div>\n    //   );\n    // } else {\n    let resultBlogs = this.state.dataCollection;\n\n    if (this.state.text) {\n      this.state.search === \"Title\" ? resultBlogs = resultBlogs.filter(item => item.title.includes(this.state.text)) : resultBlogs = resultBlogs.filter(item => item.content.includes(this.state.text));\n    }\n\n    let displayLength = resultBlogs.length;\n    resultBlogs = this.paginateLocal(resultBlogs);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: [/*#__PURE__*/_jsxDEV(BlogListFilter, {\n        text: this.state.text,\n        search: this.state.search,\n        setText: textArg => this.setState({\n          text: textArg,\n          page: 1\n        }),\n        setSearch: searchArg => this.setState({\n          search: searchArg\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blog-container\",\n        children: [(_resultBlogs = resultBlogs) === null || _resultBlogs === void 0 ? void 0 : _resultBlogs.map(item => /*#__PURE__*/_jsxDEV(BlogItem, {\n          blog: { ...item\n          }\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-numbers\",\n          children: [...Array(Math.ceil(displayLength / 5))].map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"page-button\",\n            onClick: () => this.setState({\n              page: index + 1\n            }),\n            children: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/dimo/Desktop/Typescript/github-ts-blog/src/components/Dashboard.tsx"],"names":["BlogItem","BlogListFilter","React","Dashboard","Component","constructor","props","state","text","search","page","dataCollection","blogsLength","loadBlogs","bind","componentDidMount","resultBlogs","dataService","getBlogs","setState","paginateLocal","blogs","end","start","result","i","push","render","filter","item","title","includes","content","displayLength","length","textArg","searchArg","map","id","Array","Math","ceil","_","index"],"mappings":";AAAA;AAGA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAiBA,eAAe,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAA+D;AAE5EC,EAAAA,WAAW,CAACC,KAAD,EAAmB;AAC5B,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAG,EADI;AAEXC,MAAAA,MAAM,EAAG,OAFE;AAGXC,MAAAA,IAAI,EAAG,CAHI;AAIXC,MAAAA,cAAc,EAAE,EAJL;AAKXC,MAAAA,WAAW,EAAE,CALF,CAMX;;AANW,KAAb;AASA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AAED;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKF,SAAL;AACD;;AAEsB,QAATA,SAAS,GAAiB;AAEtC,QAAIG,WAAmB,GAAG,MAAM,KAAKV,KAAL,CAAWW,WAAX,CAAuBC,QAAvB,EAAhC;AAEA,SAAKC,QAAL,CAAc;AAACR,MAAAA,cAAc,EAAEK;AAAjB,KAAd;AAED,GA5B2E,CA8B5E;;;AAEQI,EAAAA,aAAa,CAAEC,KAAF,EAAuB;AAE1C,UAAMC,GAAU,GAAG,KAAKf,KAAL,CAAWG,IAAX,GAAkB,CAArC;AACA,UAAMa,KAAY,GAAGD,GAAG,GAAG,CAA3B;AACA,UAAME,MAAa,GAAG,EAAtB;;AAEA,SAAK,IAAIC,CAAC,GAAGF,KAAb,EAAoBE,CAAC,GAAGH,GAAxB,EAA6BG,CAAC,EAA9B,EAAkC;AAChC,UAAIJ,KAAK,CAACI,CAAD,CAAT,EAAcD,MAAM,CAACE,IAAP,CAAYL,KAAK,CAACI,CAAD,CAAjB;AACf;;AAED,WAAOD,MAAP;AACD;;AAEMG,EAAAA,MAAM,GAAG;AAAA;;AAEhB;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF,QAAIX,WAAW,GAAG,KAAKT,KAAL,CAAWI,cAA7B;;AAEA,QAAG,KAAKJ,KAAL,CAAWC,IAAd,EAAmB;AACjB,WAAKD,KAAL,CAAWE,MAAX,KAAsB,OAAtB,GACGO,WAAW,GAAGA,WAAW,CAACY,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAoB,KAAKxB,KAAL,CAAWC,IAA/B,CAA7B,CADjB,GAEGQ,WAAW,GAAGA,WAAW,CAACY,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACG,OAAL,CAAaD,QAAb,CAAsB,KAAKxB,KAAL,CAAWC,IAAjC,CAA7B,CAFjB;AAGD;;AAED,QAAIyB,aAAa,GAAGjB,WAAW,CAACkB,MAAhC;AAEAlB,IAAAA,WAAW,GAAG,KAAKI,aAAL,CAAmBJ,WAAnB,CAAd;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,IAAI,EAAE,KAAKT,KAAL,CAAWC,IADnB;AAEE,QAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MAFrB;AAGE,QAAA,OAAO,EAAG0B,OAAD,IAAoB,KAAKhB,QAAL,CAAc;AACGX,UAAAA,IAAI,EAAE2B,OADT;AAEGzB,UAAAA,IAAI,EAAE;AAFT,SAAd,CAH/B;AAOE,QAAA,SAAS,EAAG0B,SAAD,IAAsB,KAAKjB,QAAL,CAAc;AAACV,UAAAA,MAAM,EAAE2B;AAAT,SAAd;AAPnC;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,mCACGpB,WADH,iDACG,aAAaqB,GAAb,CAAkBR,IAAD,iBAChB,QAAC,QAAD;AAAwB,UAAA,IAAI,EAAE,EAAE,GAAGA;AAAL;AAA9B,WAAeA,IAAI,CAACS,EAApB;AAAA;AAAA;AAAA;AAAA,gBADD,CADH,eAIE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oBACG,CAAC,GAAGC,KAAK,CAACC,IAAI,CAACC,IAAL,CAAUR,aAAa,GAAG,CAA1B,CAAD,CAAT,EAAyCI,GAAzC,CAA6C,CAACK,CAAD,EAAIC,KAAJ,kBAC5C;AAEE,YAAA,SAAS,EAAC,aAFZ;AAGE,YAAA,OAAO,EAAE,MAAM,KAAKxB,QAAL,CAAc;AAACT,cAAAA,IAAI,EAAGiC,KAAK,GAAC;AAAd,aAAd,CAHjB;AAAA,sBAKGA,KAAK,GAAG;AALX,aACOA,KADP;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BC;;AApG2E","sourcesContent":["// *** transferring to Appsync client *** //\r\n\r\n\r\nimport BlogItem from \"./BlogItem\";\r\nimport BlogListFilter from \"./BlogListFilter\";\r\nimport React from \"react\";\r\nimport { Blog, Search } from \"../types/TypeDefs\";\r\nimport { DataService } from \"../services/DataService\";\r\n\r\ninterface IDashState {\r\n  text: string;\r\n  search: Search;\r\n  page: number;\r\n  dataCollection: Blog[] ;\r\n  blogsLength: number;\r\n  //loading: boolean;\r\n}\r\n\r\ninterface IDashProps {\r\n  dataService: DataService\r\n}\r\n\r\nexport default class Dashboard extends React.Component<IDashProps,IDashState> {\r\n\r\n  constructor(props:IDashProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      text : '',\r\n      search : 'Title',\r\n      page : 1,\r\n      dataCollection: [],\r\n      blogsLength: 0,\r\n      //loading: true\r\n    }\r\n\r\n    this.loadBlogs = this.loadBlogs.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.loadBlogs();\r\n  }\r\n\r\n  private async loadBlogs():Promise<void> {\r\n    \r\n    let resultBlogs: Blog[] = await this.props.dataService.getBlogs();\r\n\r\n    this.setState({dataCollection: resultBlogs});\r\n\r\n  }\r\n  \r\n  //Also paginate server side\r\n\r\n  private paginateLocal (blogs:Blog[]):Blog[] {\r\n\r\n    const end:number = this.state.page * 5;\r\n    const start:number = end - 5;\r\n    const result:Blog[] = [];\r\n\r\n    for (let i = start; i < end; i++) {\r\n      if (blogs[i]) result.push(blogs[i]);\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  public render() {\r\n\r\n  // if (this.state.loading) {\r\n    //   return (\r\n    //     //loader-spinner\r\n    //     <div class=\"lds-default\">\r\n    //       <div></div><div></div><div></div>\r\n    //       <div></div><div></div><div></div>\r\n    //       <div></div><div></div><div></div>\r\n    //       <div></div><div></div><div></div>\r\n    //     </div>\r\n    //   );\r\n    // } else {\r\n\r\n  let resultBlogs = this.state.dataCollection;\r\n\r\n  if(this.state.text){\r\n    this.state.search === \"Title\"\r\n    ? (resultBlogs = resultBlogs.filter((item) => item.title.includes(this.state.text)))\r\n    : (resultBlogs = resultBlogs.filter((item) => item.content.includes(this.state.text)));\r\n  }\r\n\r\n  let displayLength = resultBlogs.length;\r\n\r\n  resultBlogs = this.paginateLocal(resultBlogs);\r\n  \r\n  return (\r\n    <div className=\"page-container\">\r\n      <BlogListFilter\r\n        text={this.state.text}\r\n        search={this.state.search}\r\n        setText={(textArg:string) => this.setState({\r\n                                                      text: textArg,\r\n                                                      page: 1\r\n                                                    })}\r\n        setSearch={(searchArg:Search) => this.setState({search: searchArg})}\r\n      />\r\n      <div className=\"blog-container\">\r\n        {resultBlogs?.map((item) => (\r\n          <BlogItem key={item.id} blog={{ ...item }} />\r\n        ))}\r\n        <div className=\"page-numbers\">\r\n          {[...Array(Math.ceil(displayLength / 5))].map((_, index) => (\r\n            <button\r\n              key={index}\r\n              className=\"page-button\"\r\n              onClick={() => this.setState({page: (index+1)})}\r\n            >\r\n              {index + 1}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    );\r\n  };\r\n\r\n}"]},"metadata":{},"sourceType":"module"}