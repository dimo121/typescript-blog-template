{"ast":null,"code":"var _jsxFileName = \"/home/dimo/Desktop/Typescript/github-ts-blog/src/components/CreateEntry.tsx\",\n    _s = $RefreshSig$();\n\n// *** transferring to Appsync client *** //\nimport EntryFormPage from './EntryFormPage'; //import { CREATE_ENTRY } from '../apollo/protocol';\n\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\n//import { useMutation } from '@apollo/react-hooks';\nimport { v4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//change to hooks FC with useMutation\nexport const CreateEntry = props => {\n  _s();\n\n  // const [blog_id, setId] = useState('');\n  // const [newEntry, entry] = useMutation(CREATE_ENTRY);\n  // useEffect(() => {\n  //   setId(props.location.state.blog_id);\n  // }, []);\n  const {\n    state\n  } = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EntryFormPage, {\n        onSubmission: (title, content) => {\n          const id = parseInt(v4());\n          const createdAt = new Date().toLocaleString();\n          const result = {\n            id,\n            createdAt,\n            title,\n            content,\n            blog_id: state.blog_id\n          };\n          props.dataService.addEntry(result); // newEntry({\n          //   variables: {\n          //     createEntryInput: {\n          //       title: entry.title,\n          //       content: entry.content,\n          //       blog_id,\n          //     },\n          //   },\n          // }).then(() => {\n          //   window.location.replace('/');\n          // });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateEntry, \"FO3uhfHQFxifE5/pZVC1vAVIA9s=\", false, function () {\n  return [useLocation];\n});\n\n_c = CreateEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateEntry\");","map":{"version":3,"sources":["/home/dimo/Desktop/Typescript/github-ts-blog/src/components/CreateEntry.tsx"],"names":["EntryFormPage","React","useLocation","v4","CreateEntry","props","state","title","content","id","parseInt","createdAt","Date","toLocaleString","result","blog_id","dataService","addEntry"],"mappings":";;;AAAA;AAEA,OAAOA,aAAP,MAA0B,iBAA1B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAA8BC,WAA9B,QAAiD,kBAAjD;AAEA;AACA,SAASC,EAAT,QAAmB,MAAnB;;AAaA;AACA,OAAO,MAAMC,WAA0D,GAAIC,KAAD,IAAW;AAAA;;AACnF;AACA;AAEA;AACA;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,WAAW,EAA7B;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AACE,QAAA,YAAY,EAAE,CAACK,KAAD,EAAcC,OAAd,KAAiC;AAE7C,gBAAMC,EAAS,GAAGC,QAAQ,CAACP,EAAE,EAAH,CAA1B;AAEA,gBAAMQ,SAAS,GAAG,IAAIC,IAAJ,GAAWC,cAAX,EAAlB;AAEA,gBAAMC,MAAY,GAAG;AACnBL,YAAAA,EADmB;AAEnBE,YAAAA,SAFmB;AAGnBJ,YAAAA,KAHmB;AAInBC,YAAAA,OAJmB;AAKnBO,YAAAA,OAAO,EAAGT,KAAK,CAACS;AALG,WAArB;AAQAV,UAAAA,KAAK,CAACW,WAAN,CAAkBC,QAAlB,CAA2BH,MAA3B,EAd6C,CAe7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AA3BH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CA9CM;;GAAMV,W;UAOOF,W;;;KAPPE,W","sourcesContent":["// *** transferring to Appsync client *** //\r\n\r\nimport EntryFormPage from './EntryFormPage';\r\n//import { CREATE_ENTRY } from '../apollo/protocol';\r\nimport React from 'react';\r\nimport { RouteComponentProps, useLocation } from 'react-router-dom';\r\nimport { Entry } from '../types/TypeDefs';\r\n//import { useMutation } from '@apollo/react-hooks';\r\nimport { v4 } from 'uuid';\r\nimport { DataService } from '../services/DataService';\r\n\r\ntype ICreateEntryType = RouteComponentProps<{}>\r\n\r\ninterface ICreateEntryProps {\r\n  dataService: DataService;\r\n}\r\n\r\ninterface CustomState {\r\n  blog_id: number;\r\n}\r\n\r\n//change to hooks FC with useMutation\r\nexport const CreateEntry:React.FC<ICreateEntryProps & ICreateEntryType> = (props) => {\r\n  // const [blog_id, setId] = useState('');\r\n  // const [newEntry, entry] = useMutation(CREATE_ENTRY);\r\n\r\n  // useEffect(() => {\r\n  //   setId(props.location.state.blog_id);\r\n  // }, []);\r\n  const { state } = useLocation<CustomState>();\r\n\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <div className=\"create-container\">\r\n        <h1>Create entry</h1>\r\n        <EntryFormPage\r\n          onSubmission={(title:string,content:string) => {\r\n\r\n            const id:number = parseInt(v4());\r\n\r\n            const createdAt = new Date().toLocaleString();\r\n\r\n            const result:Entry = {\r\n              id,\r\n              createdAt,\r\n              title,\r\n              content,\r\n              blog_id : state.blog_id\r\n            }\r\n\r\n            props.dataService.addEntry(result);\r\n            // newEntry({\r\n            //   variables: {\r\n            //     createEntryInput: {\r\n            //       title: entry.title,\r\n            //       content: entry.content,\r\n            //       blog_id,\r\n            //     },\r\n            //   },\r\n            // }).then(() => {\r\n            //   window.location.replace('/');\r\n            // });\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}